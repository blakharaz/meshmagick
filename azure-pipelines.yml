# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

pool:
  vmImage: 'Ubuntu 16.04'

strategy:
  matrix:
    'Ogre 1.9.1':
      OGRE_REVISION: 'v1.9.1'
    'Ogre 1.10.12':
      OGRE_REVISION: 'v1.10.12'
    'Ogre 1.11.3':
      OGRE_REVISION: 'v1.11.3'

steps:
- script: |
    sudo apt update
    sudo apt install cmake \
                     libboost-all-dev \
                     libfreetype6-dev \
                     libgl1-mesa-dev \
                     libgles2-mesa-dev \
                     libglu1-mesa-dev \
                     libois-dev \
                     libxaw7-dev \
                     libxrandr-dev \
                     libxt-dev \
                     libzzip-dev \
                     mesa-common-dev \
                     ninja-build \
                     nvidia-cg-dev
  displayName: 'Install Dependencies'
- script: |
    mkdir -p build/ogre
    git clone https://github.com/OGRECave/ogre.git --branch $OGRE_REVISION --depth 1
    pushd build/ogre
    cmake ../../ogre -GNinja -DCMAKE_CXX_STANDARD=11 -DOGRE_BUILD_TESTS=OFF -DOGRE_BUILD_TOOLS=OFF -DOGRE_BUILD_SAMPLES=OFF -DOGRE_BUILD_COMPONENT_BITES=OFF -DOGRE_BUILD_COMPONENT_HLMS=OFF -DOGRE_BUILD_COMPONENT_JAVA=OFF -DOGRE_BUILD_COMPONENT_MESHLODGENERATOR=OFF -DOGRE_BUILD_COMPONENT_OVERLAY=OFF -DOGRE_BUILD_COMPONENT_PAGING=OFF -DOGRE_BUILD_COMPONENT_PROPERTY=OFF -DOGRE_BUILD_COMPONENT_PYTHON=OFF -DOGRE_BUILD_COMPONENT_RTSHADERSYSTEM=OFF -DOGRE_BUILD_COMPONENT_TERRAIN=OFF -DOGRE_BUILD_COMPONENT_VOLUME=OFF -DOGRE_BUILD_PLUGIN_BSP=OFF -DOGRE_BUILD_PLUGIN_CG=OFF -DOGRE_BUILD_PLUGIN_EXRCODEC=OFF -DOGRE_BUILD_PLUGIN_OCTREE=OFF -DOGRE_BUILD_PLUGIN_PCZ=OFF -DOGRE_BUILD_PLUGIN_PFX=OFF -DOGRE_BUILD_RENDERSYSTEM_D3D11=OFF -DOGRE_BUILD_RENDERSYSTEM_D3D9=OFF -DOGRE_BUILD_RENDERSYSTEM_GL=OFF -DOGRE_BUILD_RENDERSYSTEM_GL3PLUS=OFF -DOGRE_BUILD_RENDERSYSTEM_GLES2=OFF
    cmake --build .
    sudo cmake --build . -- install
    popd  
  displayName: 'Build OGRE'
- script: |
    cmake . -GNinja
    cmake --build .
  displayName: 'build'
